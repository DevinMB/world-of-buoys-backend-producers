version: '3.8'

services:
  alpine-python:
    image: alpine:latest
    labels:
      - "promtail.scrape=true"

    restart: always
    volumes:
      - buoy_${AGGREGATOR_TYPE}_aggregator:/data  
    tty: true  
    container_name: ${AGGREGATOR_TYPE}-buoy-aggregator-container
    environment:
      - REQUEST_DELAY=${REQUEST_DELAY}
      - RELEASE_VERSION=${RELEASE_VERSION}
      - REDIS_SERVER=${REDIS_SERVER}
      - AGGREGATOR_TYPE=${AGGREGATOR_TYPE}
      - STATION_SET_KEY=${STATION_SET_KEY}
      - STATION_URL=${STATION_URL}
      - APP_NAME=${AGGREGATOR_TYPE}-buoy-aggregator
    networks:
      - default
    entrypoint: |
      /bin/sh -c "
      apk add --no-cache python3 py3-pip git tar curl;
       
      # Check if the release directory exists, if not create it and download files
      if [ ! -d /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION} ]; then
        mkdir -p /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION} && \
        curl -L https://github.com/DevinMB/world-of-buoys-backend-producers/archive/refs/tags/v${RELEASE_VERSION}.tar.gz | tar xz --strip-components=1 -C /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION};
      fi

      # Install the dependencies using requirements.txt
      if [ -f /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION}/requirements.txt ]; then
        pip3 install -r /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION}/requirements.txt --break-system-packages;
      else
        echo 'No requirements.txt found, skipping installation';
      fi

      # Run your Python script
      python3 /data/${AGGREGATOR_TYPE}-aggregator-v${RELEASE_VERSION}/buoy_summary_aggregator/main.py;

      tail -f /dev/null
      "
      


networks:
  default:
    driver: bridge

volumes:
  buoy_SUMMARY_aggregator:  
